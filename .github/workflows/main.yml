name: Android CI Build and Report

on:
  workflow_dispatch:

jobs:
  # --- الوظيفة الأولى: محاولة البناء ---
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Attempt to Build and Capture Log
        # هذا الأمر سيحاول البناء، وإذا فشل، ستفشل هذه الخطوة بالكامل
        run: ./gradlew assembleDebug --stacktrace > build_log.txt 2>&1

      - name: Upload Build Log
        # هذه الخطوة ستعمل فقط إذا نجحت الخطوة السابقة
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-log-${{ github.run_id }}
          path: build_log.txt

      - name: Upload APK
        # هذه الخطوة ستعمل فقط إذا نجحت كل الخطوات السابقة
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: release-apk-${{ github.run_id }}
          path: app/build/outputs/apk/debug/app-debug.apk

  # --- الوظيفة الثانية: إرسال التقرير (تعمل دائمًا) ---
  report:
    runs-on: ubuntu-latest
    # 'needs: build' تعني: لا تبدأ هذه الوظيفة إلا بعد انتهاء وظيفة 'build'
    needs: build
    # 'if: always()' تعني: قم بتشغيل هذه الوظيفة دائمًا، سواء نجحت 'build' أو فشلت
    if: always()
    steps:
      - name: Determine Build Status
        id: status_check
        run: |
          # هنا نتحقق من النتيجة النهائية لوظيفة 'build'
          if [[ ${{ needs.build.result }} == 'success' ]]; then
            echo "BUILD_STATUS=success" >> $GITHUB_ENV
          else
            echo "BUILD_STATUS=failure" >> $GITHUB_ENV
          fi

      - name: Send Report to Viasocket
        run: |
          curl -X POST ${{ secrets.VIASOCKET_REPORTER_WEBHOOK }} \
          -H "Content-Type: application/json" \
          -d '{
                "build_status": "${{ env.BUILD_STATUS }}",
                "repo_name": "${{ github.repository }}",
                "branch": "${{ github.ref_name }}",
                "commit_sha": "${{ github.sha }}",
                "run_id": ${{ github.run_id }}
              }'
